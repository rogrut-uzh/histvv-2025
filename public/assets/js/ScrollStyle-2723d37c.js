import{B as s,c as t}from"./ui.mjs";var i={vertical:!1,horizontal:!1};class e extends s{constructor(){super(),this.state={hasHScroll:!1,hasVScroll:!1,isTop:!1,isLeft:!1,isBottom:!1,isRight:!1}}init(s){return this.el=s,this.$el=t(s),this.options=t.extend({},i,this.$el.data("js-scroll-style")),this.classes={hasHScroll:"has-hScroll",hasVScroll:"has-vScroll",isTop:"is-at-top",isLeft:"is-at-left",isBottom:"is-at-bottom",isRight:"is-at-right"},this.measureAndUpdate(),this.bindListeners(),this}bindListeners(){this.on(window,"resize",this.measureAndUpdate),this.on("scroll",this.measureAndUpdate)}measureAndUpdate(){this.measureScrollPosition(),this.toggleClasses()}measureScrollPosition(){if(this.options.vertical){var{scrollHeight:s,clientHeight:t,scrollTop:i}=this.el;this.state.hasVScroll=s>t,this.state.isTop=i<=0,this.state.isBottom=s-i<=t}if(this.options.horizontal){var{scrollWidth:e,clientWidth:l,scrollLeft:a}=this.el;this.state.hasHScroll=e>l,this.state.isLeft=a<=0,this.state.isRight=e-a<=l}}toggleClasses(){for(var s in this.state){var t=this.classes[s];this.state[s]?this.el.classList.contains(t)||this.el.classList.add(t):this.el.classList.contains(t)&&this.el.classList.remove(t)}}}export{e as default};
