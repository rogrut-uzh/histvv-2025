---
import DefaultLayout from '~/layouts/DefaultLayout.astro';
import Breadcrumb from "~/components/page/Breadcrumb.astro";
import MetaHead from "~/components/page/MetaHead.astro";
import SectionSectionNav from "~/components/page/SectionSectionNav.astro";
import SectionTextPict from "~/components/page/SectionTextPict.astro";
import loadJson from '~/lib/loadJson.js';
import slugify from '~/lib/slugify.js';

const website_title = "Historische Vorlesungsverzeichnisse der Universität Zürich";
const page_title = "Vorlesungsverzeichnisse";
const website_byline = "1833 - 1900";
const website_description = " ";
const zeit_trenner = " - ";


export async function getStaticPaths() {
  try {
    const veranstaltungen1 = await loadJson('/data/tbl_veranstaltungen.json');
    const veranstaltungen2 = await loadJson('/data/tbl_veranstaltungen-ab-1900w.json');
    const veranstaltungen = [...veranstaltungen1, ...veranstaltungen2];
    const semester = await loadJson('/data/tbl_semester_header.json');
    const dozenten = await loadJson('/data/tbl_dozenten.json');
    
    // Lookup-Tabelle für schnelles Mapping
    // z.B. mit dozentenById[v.id_dozent] auf den passenden Dozenten zugreifen
    const dozentenById = Object.fromEntries(dozenten.map(d => [d.id_dozent, d]));

    return semester.map((sem) => {
      const veranstaltungen_semester = veranstaltungen.filter(
        (v) => v.id_semester?.trim() === sem.id_semester?.trim()
      );

      // Gruppiere direkt nach Fakultätsname
      const veranstaltungenByFakultaet = veranstaltungen_semester.reduce((acc, v) => {
        if (!v.fak) return acc;
        if (!acc[v.fak]) acc[v.fak] = [];
        acc[v.fak].push(v);
        return acc;
      }, {});

      // Alphabetisch sortierte Fakultätsnamen
      const fakultaetNamen = Object.keys(veranstaltungenByFakultaet).sort((a, b) => a.localeCompare(b));

      return {
        params: { id: sem.id_semester },
        props: {
          sem,
          veranstaltungenByFakultaet,
          fakultaetNamen,
        }
      };
    });
  } catch (error) {
    console.error('Error loading JSON data:', error);
    return [];
  }
}

const { sem, veranstaltungenByFakultaet, fakultaetNamen } = Astro.props;


const breadcrumb = [
  { label: "Home", href: "/" },
  { label: "Vorlesungsverzeichnisse", href: "/vv/" },
  { label: sem.titel, href: `/vv/${sem.id_semester}/` }
];

---

<DefaultLayout>
  <Breadcrumb items={breadcrumb} />
  
  <MetaHead slot="head"
    title={`${sem.titel} | ${website_title} ${website_byline}`}
    description={`${website_description}`}
  />
  

  <SectionTextPict>
    <h1>{sem.titel}</h1>
    <p>Quelle: {sem.quelle}</p>

    {fakultaetNamen.map((name) => (
        <div>
            <a class="Link" href={`#${slugify(name)}`}>{name}</a>
        </div>
    ))}
    
    {fakultaetNamen.map((name, i) => (
      <section id={slugify(name)}>
        <h2>{name}</h2>
        {veranstaltungenByFakultaet[name].map((v) => (
          <p id={`${v.id_veranstaltung}`}>
            {v.vorlesungsnummer}
            
{Array.isArray(v.dozenten) && v.dozenten.length > 0 ? (
  v.dozenten.map((d, idx) => (
    <>
      {idx > 0 && ', '}
      <a class="Link" href={`/dozierende/${d.id_dozent}`}>
        {d.nachname}, {d.vorname}
      </a>{d.grad && <span style="color:#888;"> ({d.grad})</span>}
    </>
  ))
) : (
  <>Ohne Dozentenangabe</>
)}

            
            <br />
            <strong>{v.thema}</strong><br />
            {v.zeit}
            {v.zeit && v.wochenstunden && zeit_trenner}
            {v.wochenstunden && `St ${v.wochenstunden}`}
            {v.ort && `(${v.ort})`}
          </p>

        ))}
        
        {i !== fakultaetNamen.length - 1 && (
            <div class="TextImage--topLink inline-toplink">
                <!-- component: Link -->
                <a class="Link layout-standalone size-copy-xs icon-orientation-up" href="#top">
                    Top
                    <span class="Link--icon">
                        <!-- component: Icon -->
                        <span class="Icon" data-name="16--link-internal">
                            <svg>
                                <use xlink:href="#16--link-internal">
                                </use>
                            </svg>
                        </span>
                        <!-- /component: Icon -->
                    </span>
                </a>
                <!-- /component: Link -->
            </div>
        )}
      </section>
    ))}
  </SectionTextPict>

</DefaultLayout>


