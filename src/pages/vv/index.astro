---
import DefaultLayout from '~/layouts/DefaultLayout.astro';
import Breadcrumb from "~/components/page/Breadcrumb.astro";
import MetaHead from "~/components/page/MetaHead.astro";
import SectionIntro from "~/components/page/SectionIntro.astro";
import SectionMasonry from "~/components/page/SectionMasonry.astro";
import loadJson from '~/lib/loadJson.js';

const website_title = "Historische Vorlesungsverzeichnisse der Universität Zürich"
const page_title = "Vorlesungsverzeichnisse"
const website_byline = "1833 - 2000"
const website_description = " "

const veranstaltungen1 = await loadJson('/data/tbl_veranstaltungen.json');
const veranstaltungen2 = await loadJson('/data/tbl_veranstaltungen-ab-1900w.json');
const veranstaltungen = [...veranstaltungen1, ...veranstaltungen2];

// 1. Alle Semester-IDs extrahieren & sortieren
let semesterIDs = veranstaltungen
  .map(v => v.id_semester?.trim())
  .filter(Boolean);

// Optional: Duplikate entfernen, falls vorhanden
semesterIDs = Array.from(new Set(semesterIDs));

// 2. Semester-Titel bauen (SS/WS + Jahr)
function semesterTitel(id) {
  if (!id) return '';
  const year = id.slice(0, 4);
  const typ = id.endsWith('s') ? 'Sommersemester' : 'Wintersemester';
  return `${typ} ${year}`;
}

// 3. Sortieren (neuste zuerst, falls gewünscht: umdrehen)
semesterIDs.sort((a, b) => a.localeCompare(b)); // Ändere ggf. Reihenfolge

// 4. Nach Jahrzehnt gruppieren
const groupedByDecade = {};
for (const id of semesterIDs) {
  const decade = id.slice(0, 3) + "0–" + id.slice(0, 3) + "9";
  if (!groupedByDecade[decade]) groupedByDecade[decade] = [];
  groupedByDecade[decade].push({ id_semester: id, titel: semesterTitel(id) });
}
const decades = Object.keys(groupedByDecade).sort(); // Sortiert Jahrzehnte

// 5. Veranstaltungen pro Semester zählen
const veranstaltungenCount = {};
for (const v of veranstaltungen) {
  if (!veranstaltungenCount[v.id_semester]) veranstaltungenCount[v.id_semester] = 0;
  veranstaltungenCount[v.id_semester]++;
}

const breadcrumb = [
  { label: "Home", href: "/" },
  { label: "Vorlesungsverzeichnisse", href: "/vv/" }
];
---

<DefaultLayout>
    <Breadcrumb items={breadcrumb} />
    <MetaHead slot="head"
        title={`${page_title} | ${website_title} ${website_byline}`}
        description={`${website_description}`}
    />
    <SectionIntro>{`${page_title}`}</SectionIntro>
    
    <SectionMasonry>
      {decades.map((decade) => (
        <div class="MasonryGrid--item js-MasonryGrid--item">
          <div class="Teaser">
            <div class="Teaser--inner">
              <div class="Teaser--header">
                <h3 class="Teaser--title">{decade}</h3>
              </div>
              <div class="Teaser--body">
                {groupedByDecade[decade].map((s) => (
                  <div>
                    <a href={`/vv/${s.id_semester}/`} class="Link">
                      {s.titel}
                    </a>
                    <span style="color: #666; font-size: 0.9em;"> ({veranstaltungenCount[s.id_semester] || 0})</span>
                  </div>
                ))}
              </div>
            </div>
          </div>
        </div>
      ))}
    </SectionMasonry>
</DefaultLayout>
