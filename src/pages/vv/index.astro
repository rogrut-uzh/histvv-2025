---
//import { getCollection } from 'astro:content';
import DefaultLayout from '~/layouts/DefaultLayout.astro';
import Breadcrumb from "~/components/page/Breadcrumb.astro";
import MetaHead from "~/components/page/MetaHead.astro";
import PageIntro from "~/components/page/PageIntro.astro";
import PageMasonry from "~/components/page/PageMasonry.astro";

const website_title = "Historische Vorlesungsverzeichnisse der Universität Zürich"
const page_title = "Vorlesungsverzeichnisse"
const website_byline = "1833 - 1900"
const website_description = " "


import { loadCsv } from '~/lib/loadCsv.js';

// Lade alle Semester, filter und sortiere absteigend
const semester = loadCsv('/data/tbl_semester_header.csv')
  .filter((s) => s.id_semester?.trim() !== '')
  .sort((a, b) => b.id_semester.localeCompare(a.id_semester));

// Gruppiere nach Jahrzehnt
const groupedByDecade = semester.reduce((acc, s) => {
  // id_semester enthält z.B. "1833SS" oder "1842WS"
  const year = parseInt(s.id_semester.slice(0, 4), 10);
  const decade = Math.floor(year / 10) * 10;
  const label = `${decade}s`;
  if (!acc[label]) acc[label] = [];
  acc[label].push(s);
  return acc;
}, {});

// Sortiere die Jahrzehnte absteigend (neuestes zuerst)
const decades = Object.keys(groupedByDecade)
  .sort((a, b) => parseInt(b) - parseInt(a));


const breadcrumb = [
  { label: "Home", href: "/" },
  { label: "Vorlesungsverzeichnisse", href: "/vv/" }
];
---

<DefaultLayout>
    <Breadcrumb items={breadcrumb} />

    <MetaHead slot="head"
        title={`${page_title} | ${website_title} ${website_byline}`}
        description={`${website_description}`}
    />

    <PageIntro>{`${page_title}`}</PageIntro>
    
    <PageMasonry>
            {decades.map((decade) => (
            <div class="MasonryGrid--item js-MasonryGrid--item">
                <div class="Teaser">
                    <div class="Teaser--inner">
                        <div class="Teaser--header">
                            <h3 class="Teaser--title">{decade}</h3>
                        </div>
                        <div class="Teaser--body">
                              {groupedByDecade[decade].map((s) => (
                                  <a href={`/vv/${s.id_semester}/`} class="Link">{s.titel}</a>
                              ))}
                        </div>
                    </div>
                </div>
            </div>
            ))}

    </PageMasonry>
</DefaultLayout>

