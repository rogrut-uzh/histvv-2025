---
export const prerender = false;

import DefaultLayout from '~/layouts/DefaultLayout.astro';
import Breadcrumb from "~/components/page/Breadcrumb.astro";
import MetaHead from "~/components/page/MetaHead.astro";
import SectionTextPict from "~/components/page/SectionTextPict.astro";
import { pageinfo } from '~/constants.ts';

const page_title = "Dozierende";
const ES = process.env.ELASTICSEARCH_URL || 'http://elasticsearch:9200';

// Alle Dozierenden aus ES holen (bis 10k)
const body = {
  query: { term: { typ: 'dozent' } },
  size: 10000,
  _source: ['id','site_url','nachname','vorname','fak','geboren','gestorben','berufung']
};

const res = await fetch(`${ES}/histvv/_search`, {
  method: 'POST',
  headers: { 'Content-Type': 'application/json' },
  body: JSON.stringify(body)
});
if (!res.ok) {
  const txt = await res.text().catch(() => '');
  return new Response(`Suche nicht erreichbar: ${res.status} ${txt}`, { status: 502 });
}

const hits = await res.json();
const items = (hits.hits?.hits ?? []).map(h => h._source);

// filtern & sortieren (A–Z, Nachname dann Vorname)
const dozierende = items
  .filter(d => String(d?.id || '').trim() && String(d.id) !== 'vakant')
  .sort((a, b) => {
    const an = (a.nachname || '').toLocaleLowerCase('de');
    const bn = (b.nachname || '').toLocaleLowerCase('de');
    if (an !== bn) return an < bn ? -1 : 1;
    const av = (a.vorname || '').toLocaleLowerCase('de');
    const bv = (b.vorname || '').toLocaleLowerCase('de');
    return av.localeCompare(bv, 'de');
  });

const breadcrumb = [
  { label: "Home", href: "/" },
  { label: "Dozierende", href: "/dozierende/" }
];
---

<DefaultLayout>
  <Breadcrumb items={breadcrumb} />

  <MetaHead slot="head"
    title={`${page_title} | ${pageinfo.title} ${pageinfo.byline}`}
    description={`${pageinfo.description}`}
  />

  <SectionTextPict>
    <h1>{page_title}</h1>

    <h3>Filter nach Nachname</h3>
    <div id="abc-filter">
      {Array.from({ length: 26 }, (_, i) => String.fromCharCode(65 + i)).map(b => (
        <button type="button" class="abc-btn" data-buchstabe={b}>{b}</button>
      ))}
    </div>
    <button type="button" id="abc-reset">Filter aufheben</button>

    {dozierende.length === 0 ? (
      <p>Keine Dozierenden gefunden.</p>
    ) : (
      <table class="tablesorter">
        <thead>
          <tr>
            <th>Nachname, Vorname</th>
            <th>Geboren</th>
            <th>Gestorben</th>
            <th>Fakultät</th>
            <th>Berufung</th>
          </tr>
        </thead>
        <tbody>
          {dozierende.map(d => (
            <tr key={d.id}>
              <td>
                <a href={d.site_url}>
                  {d.nachname}{d.vorname ? `, ${d.vorname}` : ''}
                </a>
              </td>
              <td>{d.geboren || ""}</td>
              <td>{d.gestorben || ""}</td>
              <td>{d.fak || ""}</td>
              <td>{d.berufung || ""}</td>
            </tr>
          ))}
        </tbody>
      </table>
    )}
  </SectionTextPict>

  <script is:inline>
    document.addEventListener('DOMContentLoaded', function () {
      const buttons = document.querySelectorAll('.abc-btn');
      const reset = document.getElementById('abc-reset');

      function getRows() { return document.querySelectorAll('table tbody tr'); }

      function filterRows(letter) {
        getRows().forEach(row => {
          const link = row.querySelector('td a');
          if (link) {
            const text = link.textContent.trim().toUpperCase();
            row.style.display = text.startsWith(letter) ? '' : 'none';
          }
        });
        buttons.forEach(btn => btn.classList.toggle('is-active', btn.dataset.buchstabe === letter));
        reset.classList.remove('is-active');
      }

      function resetRows() {
        getRows().forEach(row => row.style.display = '');
        buttons.forEach(btn => btn.classList.remove('is-active'));
        reset.classList.add('is-active');
      }

      buttons.forEach(btn => btn.addEventListener('click', function () { filterRows(this.dataset.buchstabe); }));
      reset.addEventListener('click', resetRows);
    });
  </script>
</DefaultLayout>
