---
import DefaultLayout from '~/layouts/DefaultLayout.astro';
import Breadcrumb from "~/components/page/Breadcrumb.astro";
import MetaHead from "~/components/page/MetaHead.astro";
import SectionIntro from "~/components/page/SectionIntro.astro";
import SectionTextPict from "~/components/page/SectionTextPict.astro";
import loadJson from '~/lib/loadJson.js';

const website_title = "Historische Vorlesungsverzeichnisse der Universität Zürich"
const page_title = "Dozierende"
const website_byline = "1833 - 1900"
const website_description = " "

const dozierende = (await loadJson('/data/tbl_dozenten.json'))
  .filter((d) => d.id_dozent?.trim() !== '')
  .sort((a, b) => a.nachname.localeCompare(b.nachname));
  
const breadcrumb = [
  { label: "Home", href: "/" },
  { label: "Dozierende", href: "/dozierende/" }
];
---
<DefaultLayout>
    <Breadcrumb items={breadcrumb} />

    <MetaHead slot="head"
        title={`${page_title} | ${website_title} ${website_byline}`}
        description={`${website_description}`}
    />

    <SectionIntro>{`${page_title}`}</SectionIntro>
    
    <SectionTextPict>
        <h3>Filter nach Nachname</h3>
        <div id="abc-filter">
          {Array.from({ length: 26 }, (_, i) => String.fromCharCode(65 + i)).map(buchstabe => (
            <button type="button" class="abc-btn" data-buchstabe={buchstabe}>{buchstabe}</button>
          ))}
        </div>
        <button type="button" id="abc-reset">Filter aufheben</button>
        
        <table class="tablesorter">
          <thead>
            <tr>
              <th>Nachname, Vorname</th>
              <th>Geboren</th>
              <th>Gestorben</th>
              <th>Fakultät</th>
              <th>Berufung</th>
            </tr>
          </thead>
          <tbody>
            {dozierende.map((d) => (
            <tr>
              <td>
                <a href={`/dozierende/${d.id_dozent}/`}>
                  {d.nachname}, {d.vorname}
                </a>
              </td>
              <td>
                  {d.geboren}
              </td>
              <td>
                  {d.gestorben || d.gestorben || ""}
              </td>
              <td>
                  {d.fak || ""}
              </td>
              <td>
                  {d.berufung || ""}
              </td>
            </tr>
            ))}
          </tbody>
        </table>
    </SectionTextPict>
    
    <script is:inline>
      document.addEventListener('DOMContentLoaded', function () {
        const buttons = document.querySelectorAll('.abc-btn');
        const reset = document.getElementById('abc-reset');

        function getRows() {
          return document.querySelectorAll('table tbody tr');
        }

        function filterRows(letter) {
          getRows().forEach(row => {
            // Nur filtern, wenn es eine Zelle mit Link gibt
            const link = row.querySelector('td a');
            if (link) {
              const text = link.textContent.trim().toUpperCase();
              row.style.display = text.startsWith(letter) ? '' : 'none';
            }
          });
          // Aktiv-Status aktualisieren
          buttons.forEach(btn => {
            btn.classList.toggle('is-active', btn.dataset.buchstabe === letter);
          });
          // Reset-Button de-aktivieren (optional)
          reset.classList.remove('is-active');
        }

        function resetRows() {
          getRows().forEach(row => row.style.display = '');
          // Alle Buttons deaktivieren
          buttons.forEach(btn => btn.classList.remove('is-active'));
          reset.classList.add('is-active');
        }

        buttons.forEach(btn => {
          btn.addEventListener('click', function () {
            filterRows(this.dataset.buchstabe);
          });
        });

        reset.addEventListener('click', resetRows);
      });
    </script>

    
</DefaultLayout>
