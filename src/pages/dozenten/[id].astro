---
import { loadCsv } from '~/lib/loadCsv.js';

export async function getStaticPaths() {
  const dozenten = loadCsv('/data/tbl_dozenten.csv');
  const veranstaltungen = loadCsv('/data/tbl_veranstaltungen.csv');
  const fakultaeten = loadCsv('/data/tbl_fakultaeten.csv');

  return dozenten.map((dozent) => {
    const veranstaltungen_dozent = veranstaltungen.filter(
      (v) => v.id_dozent?.trim() === dozent.id_dozent?.trim()
    );

    return {
      params: { id: dozent.id_dozent },
      props: {
        dozent,
        veranstaltungen_dozent,
        fakultaeten
      }
    };
  });
}

const { dozent, veranstaltungen_dozent, fakultaeten } = Astro.props;

const fakultaet = fakultaeten.find((f) => f.id_fakultaet?.trim() === dozent.id_fakultaet?.trim());
---

<h1>{dozent.nachname}, {dozent.vorname}</h1>

<p>
  {dozent.geboren && (
    <>
      <span style="width:18px;display:inline-block;">&#10025;</span> {dozent.geboren}
      {dozent.gestorben && (
        <>
          <br />
          <span style="width:18px;display:inline-block;">&dagger;</span> {dozent.gestorben}
        </>
      )}
    </>
  )}
  {!dozent.geboren && dozent.gestorben && (
    <>
      <span style="width:18px;display:inline-block;">&dagger;</span> {dozent.gestorben}
    </>
  )}
</p>


{dozent.gagliardi && <p>{dozent.gagliardi}</p>}

{fakultaet?.fakultaet && <p>{fakultaet.fakultaet}</p>}

{dozent.dekanat && <p>{dozent.dekanat}</p>}

{dozent.rektor && <p>{dozent.rektor}</p>}

<p>PND: <a href={`https://d-nb.info/gnd/${dozent.pnd}`}>{dozent.pnd}</a></p>
<p>Wikipedia: <a href={dozent.wikipedia}>{dozent.wikipedia}</a></p>

<h2>Veranstaltungen</h2>
<table>
  <tr>
    <th>#</th>
    <th>Semester</th>
    <th>Veranstaltung</th>
    <th>Grad</th>
    <th>Funktion</th>
  </tr>
  {veranstaltungen_dozent.map((v, index) => (
    <tr>
      <td>{index + 1}</td>
      <td><a href={`/vv/${v.id_semester}.html`}>{v.id_semester}</a></td>
      <td>{v.thema}</td>
      <td>{v.grad_dozent || ''}</td>
      <td>{v.funktion_dozent || ''}</td>
    </tr>
  ))}
</table>
