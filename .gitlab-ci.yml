stages:
  - build
  - test

variables:
  SITE_URL: "https://histvv-2025.t01.cs.zi.uzh.ch"
  IMAGE: $CI_REGISTRY_IMAGE
  TAG_COMMIT: $CI_COMMIT_SHORT_SHA
  IMG_COMMIT: $IMAGE:$TAG_COMMIT

workflow:
  rules:
    - if: $CI_COMMIT_TITLE =~ /-nodeployment$/
      when: never
    - when: always

include:
  - template: Jobs/Container-Scanning.gitlab-ci.yml

container_scanning:
  stage: test
  needs: ["build_and_push"]
  variables:
    CS_IMAGE: $IMG_COMMIT    # scanne exakt das gebaute Commit-Image
  rules:
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH

build_and_push:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:v1.23.2-debug
    entrypoint: [""]
  script:
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/Dockerfile"
      --build-arg SITE_URL=$SITE_URL
      --destination "$IMG_COMMIT"                        # immer: <repo>:<shortsha>
      --destination "$IMAGE:$CI_COMMIT_REF_NAME"         # optional: <repo>:<branch> (nicht zum Deploy nutzen)
      ${CI_COMMIT_TAG:+--destination "$IMAGE:$CI_COMMIT_TAG"}  # nur bei Git-Tag zusätzlich :<tag>
  rules:
    - if: $CI_COMMIT_TAG      # läuft bei Tag-Pipelines (z.B. 0.9)
    - if: $CI_COMMIT_BRANCH   # läuft bei normalen Branch-Pipelines (main/test)